<?php
// password_reset.php - Simplified Password Reset System
session_start();
require_once 'database.php';

// Determine the current stage of password reset
$stage = isset($_GET['stage']) ? $_GET['stage'] : 'request';

// Handle password reset request
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    switch ($stage) {
        case 'request':
            // Handle initial password reset request
            $username = sanitize($conn, $_POST['username']);
            
            if (empty($username)) {
                $_SESSION['error_message'] = "Username is required.";
                break;
            }

            try {
                // Check if username exists for an admin account
                $query = "SELECT item_id, login, email FROM accounts WHERE login = ? AND access_level >= 100";
                $stmt = $conn->prepare($query);
                $stmt->bind_param("s", $username);
                $stmt->execute();
                $result = $stmt->get_result();

                if ($result->num_rows === 1) {
                    $user = $result->fetch_assoc();
                    
                    // Generate reset token
                    $reset_token = generateSecureToken();
                    $token_expiry = date('Y-m-d H:i:s', strtotime('+1 hour'));

                    // Store reset token in database
                    $updateQuery = "UPDATE accounts 
                                    SET reset_token = ?, 
                                        reset_token_expiry = ?, 
                                        reset_attempts = COALESCE(reset_attempts, 0) + 1 
                                    WHERE item_id = ?";
                    $updateStmt = $conn->prepare($updateQuery);
                    $updateStmt->bind_param("ssi", $reset_token, $token_expiry, $user['item_id']);
                    $updateStmt->execute();

                    // Log security event
                    securityLog('PASSWORD_RESET_REQUESTED', $user['login'], $_SERVER['REMOTE_ADDR'], 
                                "Password reset token generated");

                    // Store token in session for display
                    $_SESSION['reset_token'] = $reset_token;
                    $_SESSION['reset_username'] = $user['login'];
                } else {
                    // Log failed reset attempt
                    securityLog('PASSWORD_RESET_FAILED', 'UNKNOWN', $_SERVER['REMOTE_ADDR'], 
                                "Password reset attempt for non-existent username: {$username}");
                    
                    $_SESSION['error_message'] = "No admin account found with this username.";
                }
            } catch (Exception $e) {
                $_SESSION['error_message'] = "An error occurred: " . $e->getMessage();
            }
            break;

        case 'reset':
            // Handle password reset
            $token = $_POST['token'] ?? '';
            $new_password = $_POST['new_password'] ?? '';
            $confirm_password = $_POST['confirm_password'] ?? '';

            // Validate passwords
            $errors = [];
            if (empty($new_password) || $new_password !== $confirm_password) {
                $errors[] = "Passwords do not match or are empty.";
            }

            if (strlen($new_password) < 8) {
                $errors[] = "Password must be at least 8 characters long.";
            }

            if (!empty($errors)) {
                $_SESSION['form_errors'] = $errors;
                break;
            }

            try {
                // Verify token
                $query = "SELECT item_id, login, email, reset_token_expiry 
                          FROM accounts 
                          WHERE reset_token = ? 
                          AND reset_token_expiry > NOW()";
                $stmt = $conn->prepare($query);
                $stmt->bind_param("s", $token);
                $stmt->execute();
                $result = $stmt->get_result();

                if ($result->num_rows === 1) {
                    $user = $result->fetch_assoc();

                    // Hash new password
                    $hashed_password = password_hash($new_password, PASSWORD_ARGON2ID);

                    // Update password and clear reset token
                    $updateQuery = "UPDATE accounts 
                                    SET password = ?, 
                                        reset_token = NULL, 
                                        reset_token_expiry = NULL,
                                        reset_attempts = 0 
                                    WHERE item_id = ?";
                    $updateStmt = $conn->prepare($updateQuery);
                    $updateStmt->bind_param("si", $hashed_password, $user['item_id']);
                    
                    if ($updateStmt->execute()) {
                        // Log security event
                        securityLog('PASSWORD_RESET_SUCCESSFUL', $user['login'], $_SERVER['REMOTE_ADDR'], 
                                    "Password successfully reset for admin user");

                        $_SESSION['success_message'] = "Your password has been reset successfully. Please log in.";
                        header("Location: login.php");
                        exit;
                    } else {
                        throw new Exception("Failed to update password.");
                    }
                } else {
                    // Log failed reset attempt
                    securityLog('PASSWORD_RESET_FAILED', 'UNKNOWN', $_SERVER['REMOTE_ADDR'], 
                                "Invalid or expired reset token used");
                    
                    $_SESSION['error_message'] = "Invalid or expired reset token.";
                }
            } catch (Exception $e) {
                $_SESSION['error_message'] = "An error occurred: " . $e->getMessage();
            }
            break;
    }
}

$page_title = "Password Reset";
include 'header.php';
?>

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card">
                <div class="card-header">
                    <h3 class="text-center">
                        <i class="bi bi-shield-lock me-2"></i>
                        <?php 
                        echo match($stage) {
                            'request' => 'Request Password Reset',
                            'reset' => 'Reset Your Password',
                            default => 'Password Reset'
                        };
                        ?>
                    </h3>
                </div>
                <div class="card-body">
                    <?php 
                    // Display any error or success messages
                    if (isset($_SESSION['error_message'])) {
                        echo '<div class="alert alert-danger">' . 
                             htmlspecialchars($_SESSION['error_message']) . 
                             '</div>';
                        unset($_SESSION['error_message']);
                    }

                    if (isset($_SESSION['success_message'])) {
                        echo '<div class="alert alert-success">' . 
                             htmlspecialchars($_SESSION['success_message']) . 
                             '</div>';
                        unset($_SESSION['success_message']);
                    }

                    // Display form errors
                    if (isset($_SESSION['form_errors'])) {
                        echo '<div class="alert alert-warning">';
                        foreach ($_SESSION['form_errors'] as $error) {
                            echo htmlspecialchars($error) . '<br>';
                        }
                        echo '</div>';
                        unset($_SESSION['form_errors']);
                    }

                    // Display reset token if generated
                    if (isset($_SESSION['reset_token'])) {
                        echo '<div class="alert alert-info">';
                        echo '<strong>Reset Token:</strong> ' . htmlspecialchars($_SESSION['reset_token']) . '<br>';
                        echo '<strong>Username:</strong> ' . htmlspecialchars($_SESSION['reset_username']) . '<br>';
                        echo 'This token will expire in 1 hour. Please use it to reset the password.';
                        echo '</div>';
                        unset($_SESSION['reset_token']);
                        unset($_SESSION['reset_username']);
                    }
                    ?>

                    <?php if ($stage === 'request'): ?>
                        <form method="post" action="?stage=request">
                            <div class="mb-3">
                                <label for="username" class="form-label">Admin Username</label>
                                <div class="input-group">
                                    <span class="input-group-text"><i class="bi bi-person"></i></span>
                                    <input type="text" class="form-control" id="username" name="username" required 
                                           placeholder="Enter your admin username">
                                </div>
                                <div class="form-text">
                                    Enter the username for the admin account.
                                </div>
                            </div>
                            
                            <div class="d-grid">
                                <button type="submit" class="btn btn-primary">
                                    <i class="bi bi-key me-2"></i>Generate Reset Token
                                </button>
                            </div>
                        </form>

                    <?php elseif ($stage === 'reset'): 
                        // Verify token before showing reset form
                        $token = $_GET['token'] ?? '';
                        
                        if (!empty($token)) {
                            // Verify token is valid and not expired
                            $query = "SELECT item_id FROM accounts 
                                      WHERE reset_token = ? 
                                      AND reset_token_expiry > NOW()";
                            $stmt = $conn->prepare($query);
                            $stmt->bind_param("s", $token);
                            $stmt->execute();
                            $result = $stmt->get_result();
                            
                            if ($result->num_rows === 1):
                    ?>
                        <form method="post" action="?stage=reset">
                            <input type="hidden" name="token" value="<?php echo htmlspecialchars($token); ?>">
                            
                            <div class="mb-3">
                                <label for="new_password" class="form-label">New Password</label>
                                <div class="input-group">
                                    <span class="input-group-text"><i class="bi bi-lock"></i></span>
                                    <input type="password" class="form-control" id="new_password" 
                                           name="new_password" required minlength="8" 
                                           placeholder="Enter new password">
                                </div>
                                <div class="form-text">
                                    Password must be at least 8 characters long.
                                </div>
                            </div>
                            
                            <div class="mb-3">
                                <label for="confirm_password" class="form-label">Confirm New Password</label>
                                <div class="input-group">
                                    <span class="input-group-text"><i class="bi bi-lock-fill"></i></span>
                                    <input type="password" class="form-control" id="confirm_password" 
                                           name="confirm_password" required minlength="8" 
                                           placeholder="Confirm new password">
                                </div>
                            </div>
                            
                            <div class="d-grid">
                                <button type="submit" class="btn btn-primary">
                                    <i class="bi bi-arrow-clockwise me-2"></i>Reset Password
                                </button>
                            </div>
                        </form>
                    <?php 
                            else: 
                    ?>
                        <div class="alert alert-danger">
                            <p>Invalid or expired reset token. Please request a new password reset.</p>
                            <a href="?stage=request" class="btn btn-outline-danger">
                                <i class="bi bi-arrow-repeat me-2"></i>Request New Reset Token
                            </a>
                        </div>
                    <?php 
                            endif; 
                        else: 
                    ?>
                        <div class="alert alert-warning">
                            No reset token provided. Please request a password reset.
                        </div>
                    <?php endif; ?>
                </div>
                
                <div class="card-footer text-center">
                    <a href="login.php" class="text-muted text-decoration-none">
                        <i class="bi bi-arrow-left me-2"></i>Back to Login
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

<?php include 'footer.php'; ?>